version:
  2

jobs:
  test:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/github.com/containership/cluster-manager
    steps:
      - checkout
      - setup_remote_docker
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go get -u golang.org/x/lint/golint
      - run:
          name: Install dependencies
          command: make dep
      - run:
          name: Format check
          command: make fmt-check
      - run:
          name: Lint
          command: make lint
      - run:
          name: Vet
          command: make vet
      - run:
          name: Verify generated files
          command: make verify
      - run:
          name: Test
          command: |
            make coverage && bash <(curl -s https://codecov.io/bash)

  build-agent:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/github.com/containership/cluster-manager
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build agent
          command: make build-agent

  build-coordinator:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/github.com/containership/cluster-manager
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build coordinator
          command: make build-coordinator

  build-and-publish-agent:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/github.com/containership/cluster-manager
    steps:
      - checkout
      - setup_remote_docker
      - run: |
            export AGENT_IMAGE_NAME=$CIRCLE_PROJECT_USERNAME/cloud-agent
            export AGENT_IMAGE_TAG=`if [ -z $CIRCLE_TAG ]; then echo latest; else echo $CIRCLE_TAG; fi`
            echo "Building Docker image $AGENT_IMAGE_NAME:$AGENT_IMAGE_TAG"
            make build-agent
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
            echo "Pushing Docker image $AGENT_IMAGE_NAME:$AGENT_IMAGE_TAG"
            docker push $AGENT_IMAGE_NAME:$AGENT_IMAGE_TAG
            docker logout

  build-and-publish-coordinator:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/github.com/containership/cluster-manager
    steps:
      - checkout
      - setup_remote_docker
      - run: |
            export COORDINATOR_IMAGE_NAME=$CIRCLE_PROJECT_USERNAME/cloud-coordinator
            export COORDINATOR_IMAGE_TAG=`if [ -z $CIRCLE_TAG ]; then echo latest; else echo $CIRCLE_TAG; fi`
            echo "Building Docker image $COORDINATOR_IMAGE_NAME:$COORDINATOR_IMAGE_TAG"
            make build-coordinator
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
            echo "Pushing Docker image $COORDINATOR_IMAGE_NAME:$COORDINATOR_IMAGE_TAG"
            docker push $COORDINATOR_IMAGE_NAME:$COORDINATOR_IMAGE_TAG
            docker logout

workflows:
  version: 2

  commit:
    jobs:
      - test

      - build-agent:
          filters:
            branches:
              ignore: master # master runs the publish job instead

      - build-coordinator:
          filters:
            branches:
              ignore: master # master runs the publish job instead

      - build-and-publish-agent:
          context: containershipbot
          requires:
            - test
          filters:
            branches:
              only:
                - master

      - build-and-publish-coordinator:
          context: containershipbot
          requires:
            - test
          filters:
            branches:
              only:
                - master

  release:
    jobs:
      - test:
          filters:  # filters are required to match build-and-publish-* jobs since they requires this one
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - build-and-publish-agent:
          context: containershipbot
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - build-and-publish-coordinator:
          context: containershipbot
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
